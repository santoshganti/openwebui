# Original

services:
  # PostgreSQL Database - Enhanced performance and enterprise features
  postgres:
    image: pgvector/pgvector:pg15
    container_name: openwebui-postgres
    environment:
      POSTGRES_USER: openwebui
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-openwebui_secure_password}
      POSTGRES_DB: openwebui
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Optional: Custom init scripts
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openwebui -d openwebui"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - openwebui-network

  # Redis - Required for clustering and websocket support
  redis:
    image: redis:7-alpine
    container_name: openwebui-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5
    networks:
      - openwebui-network

  # Qdrant Vector Database - Enhanced vector search performance
  qdrant:
    image: qdrant/qdrant:latest
    container_name: openwebui-qdrant
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"
    restart: unless-stopped
    networks:
      - openwebui-network

  # OpenWebUI Main Application
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    ports:
      - "3000:8080"
    environment:
      # Database Configuration
      - DATABASE_URL=postgresql://openwebui:${POSTGRES_PASSWORD:-openwebui_secure_password}@postgres:5432/openwebui

      # Vector Database Configuration
      - VECTOR_DB=qdrant
      - QDRANT_URI=http://qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY:-qdrant_api_key}

      # Redis Configuration for Clustering
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379
      - WEBSOCKET_MANAGER=redis
      - WEBSOCKET_REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379/1
      - ENABLE_WEBSOCKET_SUPPORT=true

      # Ollama Configuration
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://host.docker.internal:11434}

      # OpenAI API Configuration (if using external APIs)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}

      # Document Processing Configuration
      - CHUNK_SIZE=${CHUNK_SIZE:-2500}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-500}
      - PDF_EXTRACT_IMAGES=${PDF_EXTRACT_IMAGES:-false}

      # Security Configuration
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-secret_key_change_me}
      - SAFE_MODE=${SAFE_MODE:-false}

      # Performance Configuration
      - THREAD_POOL_SIZE=${THREAD_POOL_SIZE:-40}

      # Feature Toggles
      - ENABLE_SIGNUP=${ENABLE_SIGNUP:-false}
      - ENABLE_LOCAL_WEB_FETCH=${ENABLE_LOCAL_WEB_FETCH:-true}
      - ENABLE_WEB_SEARCH=${ENABLE_WEB_SEARCH:-true}

    volumes:
      - openwebui_data:/app/backend/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    restart: unless-stopped
    networks:
      - openwebui-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: openwebui-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@openwebui.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password}
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - openwebui-network

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: openwebui-redis-commander
    environment:
      REDIS_HOSTS: "local:redis:6379:0:${REDIS_PASSWORD:-redis_secure_password}"
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - openwebui-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  openwebui_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  openwebui-network:
    driver: bridge
# Environment file template (.env)
# Copy to .env and customize values
# POSTGRES_PASSWORD=secure_postgres_password
# REDIS_PASSWORD=secure_redis_password
# QDRANT_API_KEY=your_qdrant_api_key
# WEBUI_SECRET_KEY=your_secret_key_here
# OPENAI_API_KEY=your_openai_api_key
# OLLAMA_BASE_URL=http://host.docker.internal:11434
# PGADMIN_EMAIL=admin@yourdomain.com
# PGADMIN_PASSWORD=secure_admin_password
# ENABLE_SIGNUP=false
# SAFE_MODE=false
