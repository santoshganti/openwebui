{"path":"wiki/Artificial Intelligence/Coursework/Assignment 2 DS (Sep 6, 2018).pdf","text":"RPCathreads tab Rpc code encample RPC Remote Procedure calls function in library think of it as service for en Printin I beds Application deves are familiar with simple procedure model well engineered procedures operate in isolation black bon There is no fundamental reason not to execute procedures on separate machine Thffocation between called www.nyeaaenbygnof procedure call mechanism went F call remote from all Here Time Interactions Mss msas server client I 1 ii ynD Theseus call for execute for handles ferves El Dispated Istab RPCED RACED Sd mI m et 75ᵗʰ client stub Stubbuildsmessage calls Stub builds message calls 0s local 0s OS sends message to OS sends message remote Os to client's 0s Remote Os giles messages Client's os gives message to stub to stab Stab unpats parametes1 110 client stubuptalg the result returns calls server to the client clientmachine over machine Fetprocess Ho i F4 Lt A Marshalling serialization 1 integral types are easy what about complen data structure 2 Deal with different Machine a 0s's wire format Binding 1 How to know what machine for what service threadclient server pro process Time Thread 1 14 Time Thrad 3 rpc handles might take a long time often use threads to execute many rps Concurrity Cthvadsperhandler execution E.es 27105 TÉtnetwok ÉoñlsÉstpically mef that client is 3 slow server waiting for a reply 4 crashed server it no reply in seconds regardless of failures execute the VPC atleastonce I fii.inE F I while true send request wait seconds for reply if reply return 3 not a viable real world solution Time Interactions Msgs msas server client I i mzanmI seconds F 1 i i zithmal ED C oneresponsebuttyy.TT Put Keg 10 gets delayed Put key 20 Past seconds get ke put FÉLÉ arrives immediately after gt put207 actions It does work for read only operatesons or if you have a strategy for duplicates AtMOSTONCE sever detects duplicates not execute handler how to detct Introduce a unqueid per RPC Invocation some storage Client msgs server mkktgitseentn.pt return olden else r hondlftn.my old mid seenmid true al fi e en a Howaboutonest Need at most once with at least once unbounded detries Go RPC At most IIe with respect to single Client server Built on top of Tcp connection This TCP handles retries duplicates under covers Fsecheduling 1","libVersion":"0.5.0","langs":""}